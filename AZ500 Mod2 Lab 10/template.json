{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "certificates_AzureClassicRunAsCertificate_base64Value": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "certificates_AzureRunAsCertificate_base64Value": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "virtualMachines_UpdateLabVM_name": {
            "defaultValue": "UpdateLabVM",
            "type": "String"
        },
        "virtualNetworks_Updates_vnet_name": {
            "defaultValue": "Updates-vnet",
            "type": "String"
        },
        "networkInterfaces_updatelabvm528_name": {
            "defaultValue": "updatelabvm528",
            "type": "String"
        },
        "publicIPAddresses_UpdateLabVM_ip_name": {
            "defaultValue": "UpdateLabVM-ip",
            "type": "String"
        },
        "automationAccounts_MyAutomation_name": {
            "defaultValue": "MyAutomation",
            "type": "String"
        },
        "networkSecurityGroups_UpdateLabVM_nsg_name": {
            "defaultValue": "UpdateLabVM-nsg",
            "type": "String"
        },
        "schedules_shutdown_computevm_updatelabvm_name": {
            "defaultValue": "shutdown-computevm-updatelabvm",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-10-31",
            "name": "[parameters('automationAccounts_MyAutomation_name')]",
            "location": "eastus",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkSecurityGroups_UpdateLabVM_nsg_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "ff9d6538-b6a5-4cfa-8f36-855ecbc62325",
                "securityRules": [],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"3e959323-cf74-4457-a8b4-f185a8a8fa79\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-12-01",
            "name": "[parameters('publicIPAddresses_UpdateLabVM_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "f8440a25-5fa1-4a5f-896c-3e9ccd0eb33a",
                "ipAddress": "52.226.128.76",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-12-01",
            "name": "[parameters('virtualNetworks_Updates_vnet_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "df1d9515-80f8-4af6-8320-eb4a57df44e0",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "etag": "W/\"873328fc-d67b-45a1-9e46-c33423230e26\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/certificates",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureClassicRunAsCertificate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
                "isExportable": false,
                "thumbprint": "B601454CE93A4336DEC6E2BAA584C224A7EE8206",
                "base64Value": "[parameters('certificates_AzureClassicRunAsCertificate_base64Value')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/certificates",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRunAsCertificate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
                "isExportable": true,
                "thumbprint": "2D851DA6CA5632E5E44DF62E5D24EDB3F4A1ED57",
                "base64Value": "[parameters('certificates_AzureRunAsCertificate_base64Value')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connections",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureClassicRunAsConnection')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "connectionType": {
                    "name": "AzureClassicCertificate"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connections",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRunAsConnection')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "connectionType": {
                    "name": "AzureServicePrincipal"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Azure')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "AutomationCertificateName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionID": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureClassicCertificate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "SubscriptionName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "CertificateAssetName": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/connectionTypes",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureServicePrincipal')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "isGlobal": true,
                "fieldDefinitions": {
                    "ApplicationId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "TenantId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "CertificateThumbprint": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    },
                    "SubscriptionId": {
                        "isEncrypted": false,
                        "isOptional": false,
                        "type": "System.String"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AuditPolicyDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Azure')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Azure.Storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Automation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Compute')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Profile')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Resources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Sql')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureRM.Storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/ComputerManagementDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/GPRegistryPolicyParser')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.PowerShell.Core')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.PowerShell.Diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.PowerShell.Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.PowerShell.Security')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.PowerShell.Utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Microsoft.WSMan.Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/Orchestrator.AssetManagement.Cmdlets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/PSDscResources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/SecurityPolicyDsc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/StateConfigCompositeResources')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/xDSCDomainjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/xPowerShellExecutionPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/xRemoteDesktopAdmin')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "contentLink": {}
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2018-06-30",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureAutomationTutorial')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "runbookType": "GraphPowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2018-06-30",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureAutomationTutorialPython2')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "runbookType": "Python2",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2018-06-30",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureAutomationTutorialScript')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2018-06-30",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureClassicAutomationTutorial')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "runbookType": "GraphPowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2018-06-30",
            "name": "[concat(parameters('automationAccounts_MyAutomation_name'), '/AzureClassicAutomationTutorialScript')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccounts_MyAutomation_name'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachines_UpdateLabVM_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_updatelabvm528_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_UpdateLabVM_name'), '_OsDisk_1_411268ba9c7c4b349c95ed312dc82548')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                           
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_UpdateLabVM_name')]",
                    "adminUsername": "azureadmin",
                    "adminPassword": "Azure123456!",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_updatelabvm528_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "microsoft.devtestlab/schedules",
            "apiVersion": "2016-05-15",
            "name": "[parameters('schedules_shutdown_computevm_updatelabvm_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_UpdateLabVM_name'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1900"
                },
                "timeZoneId": "UTC",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_UpdateLabVM_name'))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "3f511a3d-a25a-4816-8812-b7d4f85fefdb"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_Updates_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Updates_vnet_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.0.0/24",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkInterfaces_updatelabvm528_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_UpdateLabVM_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Updates_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_UpdateLabVM_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "fef7f21b-7041-438a-90de-a233c9fd9bc8",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"d5416ac3-6f38-40d3-a2ca-36b9f8b8fa0c\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_UpdateLabVM_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Updates_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "cwkr1x5yqd1evaza3nffpx0e2a.bx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-4D-6E-24",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_UpdateLabVM_nsg_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        }
    ]
}